; マクロアセンブラで使える演算子の一覧
;
; ・単項演算子
;
; .pos.(+)	この演算子に続く値が正であることを示す.
; .neg.(-)	この演算子に続く値が負であることを示す.
; .not.		論理 NOT
; .high.		ロングワード(32ビット)の下位ワードの上位バイトを分離する.
; .low.		ロングワード(32ビット)の下位ワードの下位バイトを分離する.
; .highw.		ロングワード(32ビット)の上位ワードを分離する.
; .loww.		ロングワード(32ビット)の下位ワードを分離する.
; .nul.		常に 0 を返す.
;
; ・二項演算子
;
; .mod.		剰余
; .shr.(>>)	指定されたビット数だけ右へ論理シフト.
; .shl.(<<)	指定されたビット数だけ左へ論理シフト.
; .asr.		指定されたビット数だけ右へ算術シフト.
;
; 		算術シフトにおいては、最上位ビットは符号とみなされるのでこの内
; 		容は決して変わらない.
; 		これに対して論理シフトは、データを数ではなく論理的な0と1の集ま
; 		りとみなしているから、符号というものはありえない. 右へシフトし
; 		た場合でも、左へシフトした場合でも、空いたビット位置には常に0
; 		が入る.
;
; .add.(+)	加算
; .sub.(-)	減算
; .mul.(*)	乗算
; .div.(/)	除算
;
; .eq.(=,==)	オペランドが互いに等しいとき真(-1)を返す.
; .ne.(<>,!=)	オペランドが互いに等しくないとき真(-1)を返す.
; .lt.(<)		左オペランドが右オペランドより小さいとき真(-1)を返す.
; .le.(<=)	左オペランドが右オペランドより小さいか等しいとき真(-1)を返す.
; .gt.(>)		左オペランドが右オペランドより大きいとき真(-1)を返す.
; .ge.(>=)	左オペランドが右オペランドより大きいか等しいとき真(-1)を返す.
; .slt.(.<.)	符号つきlt
; .sle.(.<=)	符号つきle
; .sgt.(.>.)	符号つきgt
; .sge.(.>=.)	符号つきge
; .and.(&)	論理 AND. 両オペランドの論理積を返す.
; .or.(|)		論理 OR. 両オペランドの論理和を返す.
; .xor.(.eor.,^)	排他的 OR. 両オペランドの排他的論理和を返す.

PAGEADDRBIT	equ	13			; ページ内アドレス(ページ内のオフセット)のビット数
PAGEADDRSIZE	equ	(1.<<.PAGEADDRBIT)	; ページ切り替えの最小単位 (2^PAGEBIT)
PAGEADDRMASK	equ	(PAGEADDRSIZE-1)	; アドレスをバンク内のオフセットに変換するためのマスク
PAGENUMBIT	equ	(16-PAGEADDRBIT)	; ページ番号のビット数
PAGENUMSIZE	equ	(1.<<.PAGENUMBIT)	; 64K空間に存在するページ数
PAGENUMMASK	equ	(PAGENUMSIZE-1)		; ページ番号を取り出すためのマスク
